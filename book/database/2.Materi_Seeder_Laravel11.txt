___________________
|apa itu seeder?|  10/09/2025

seeder adalah sebuah skema atau Dummy dalam proses memasukan data ke dalam table yang ada pada database
mudah nya seed ini di ibarat kan seperti sebuah kue yang nanti akan di bawa oleh kasir ke dalam Etalase tempat menyimpan data 
jadi alur nya gini 👇
____________________
|membuat seeder Baru|

1. Bash akan Membuat Dummy sample tempat kamu menyediakan data dan kamu harus pastikan table mana yang akan 
   kamu isi data nya semisal di sini Menggunakan table Siswas yang berisi beberapa data 
   -> nama lengkap
   -> jenis kelamin
   -> tanggal lahir
   -> kelas

   cara untuk membuat sample ini adalah dengan mengetikan pada cmd 
   php artisan make:seeder [NamaSeeder]TableSeeder

   lalu enter.  
   coba cek di pada Folder seeder📁 yang berada di dalam folder database📁 di sana ada File baru yang bias nya bertulis kan
   NamaTableSeeder.php📄
   buka file tersebut, isi nya akan seperti ini 👇

<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;

class SiswastableSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        //isi
    }
}

________________________
|Bonus untuk melengkapi|

pada bagian ini sebenernya ada yang tidak lengkap yaitu sebuah Fungsi pada database
seperti Insert delete dan lain lain. maka dari itu perlu di Tambah kan sebuah penhubung
yaitu ini 👇

use Illuminate\Support\Facades\DB;

baris ini di tambah kan di bawah baris 
use Illuminate\Database\Seeder;
atau sebelum 
class NamaTableSeeder extends Seeder

2. jika kamu perhatikan di dalam file itu ada sebuah class dengan function di dalam nya
   nah kemudian function ini bisa kita pakai untuk menyimpan atau menyediakan data untuk di simpan di
   database sebagai record atau isi dari field di bagian ini 👇

 public function run(): void
 {
     //isi
 }

   di dalam nya tepat nya di bagian //isi bisa di tuliskan syntaks ini di dalam nya 👇

 DB::table('Siswas')->insert([

   //isi record kamu di sini kamu bisa menuliskan nya dengan rumus
   // 'nama_field' => 'isi record',
   // misalkan
   'nama_lengkap' => 'Kina SaQina',
   'jenis_kelamin' => 'perempuan',
   'tanggal_lahir' => '2009-06-12',
   'kelas' => 'XI RPL 1',

 ]);

   jika sudah maka kamu sudah berhasil membuat sample data Dummy untuk di simpan di database sebagai record 
   tapi ada 1 hal terakhir sebelum penyesuaian 

3. Menjalankan Seeder. untuk menjalankan seeder ada yang nama nya sebuah Pintu masuk yang di gunakan unuk menjalankan
   seeder yang di mana seeder ini akan di jalan kan pada File DatabaseSeeder.php📄 file ini ada  di Folder yang sama dengan 
   kamu menyimpan File seeder lain biasa nya ada di paling atas 
   coba kamu buka ketika di buka tampilan nya akan seperti ini 

<?php

namespace Database\Seeders;

use App\Models\User;
// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        // User::factory(10)->create();

        User::factory()->create([
            'name' => 'Test User',
            'email' => 'test@example.com',
        ]);  
    }
}

   jika kamu ingin seeder yang sudah kamu buat masuk ke dalam database kamu perlu malakukan konfigurasi
   tambahan pada file ini coba kamu lihat di atas di dalam public function run(): di sana ada sebuah model yang 
   di definisikan sebagai user factory yaitu 
   User::factory()->create([])
   ini biasa nya ada di database/factories/UserFactory.php  
   nanti bisa kamu cek sendiri. untuk kali ini kita fokus menambah konfigurasi pada seeder yang kamu buat.  
   tambah kan baris baru di dalam function tadi dan di bawah user tadi buat kan 👇

        $this->call([
          //di bagian ini kamu bisa masukin rumus dan nama seeder sesuai yang ingin kamu jalan kan
          //rumus nya 👇
          //  NamaTableSeeder::class, 
          //contoh Xample
          PostsTableSeeder::class, //ini seeder posts
          SiswastableSeeder::class, //isi seeder Siswas
        ]);

4. Jika kamu sudah Membuat seeder, mengisi seeder, melakukan konfigurasi pada DatabaseSeeder langkah 
   selanjut nya adalah menjalankan seeder pada Bash, Git Atau Cmd. jika menggunakan cmd ketik ctrl + ` 
   kamu bisa menuliskan beberapa perintah sesuai yang kamu mau 

   a. jalan kan semua seeder yang ada di $this->call
      php artisan db:seed

   b. jalan kan seeder tertentu 
      php artisan db:seed --class=NamaTableSeeder

   jika kamu menemukan error ketika menjalankan seeder jangan khawatir.  
   semisal error nya adalah   

INFO  Seeding database.  
Illuminate\Database\UniqueConstraintViolationException 
SQLSTATE[23000]: Integrity constraint violation: 19 UNIQUE constraint failed: users.email (Connection: sqlite, SQL: insert into "users" ("name", "email", "email_verified_at", "password", "remember_token", "updated_at", "created_at") values (Test User, test@example.com, 2025-09-11 00:45:23, $2y$12$isPUNItMeLgE5i1/hcuj7OW9fpZj4kebZY.YM47JcroeJnusamKBG, 3uwkwIeZ5L, 2025-09-11 00:45:26, 2025-09-11 00:45:26))
at vendor\laravel\framework\src\Illuminate\Database\Connection.php:819
1   vendor\laravel\framework\src\Illuminate\Database\Connection.php:570
    PDOException::("SQLSTATE[23000]: Integrity constraint violation: 19 UNIQUE constraint failed: users.email")
2   vendor\laravel\framework\src\Illuminate\Database\Connection.php:570
    PDOStatement::execute()

   itu artinya database kamu sudah punya data yang kamu tulis di dalam nya di database.  
   nah kita bisa akali jika kamu ingin data dummy nya ingin tetap sama seperti pada file seed kamu
   kamu bisa ketikan ini di Bash 
   php artisan migrate:fresh --seed

   code ini artinya dia akan mengulangi kembali isi seed ke posisi default atau kosong 
   nah kita sudah ubah posisi table ke kosong sekarang kita bisa isi data dummy pada file seed kita ke dalam nya
   ketikan lagi 
   php artisan db:seed

   jika sukses kamu bisa cek di database apakah data tersebut telah masuk sebagai record pada table.  
   jika sudah maka kamu telah selesai membuat data dummy tersebut.  
   jika terjadi error yang berbeda dengan di atas kamu bisa cek beberapa file yang kamu konfigurasi mungkin di sana 
   terjadi typo atau kurang nya kata yang tidak sesuai kamu bisa cek kembali.  


______________________
| rumusan singkat     |


1. Membuat Seeder
Jalankan perintah:
  php artisan make:seeder NamaSeeder

Contoh:
  php artisan make:seeder UserSeeder

Seeder akan muncul di:
  database/seeders/UserSeeder.php

2. Mengisi Seeder dengan Data
Edit file UserSeeder.php:
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Hash;

class UserSeeder extends Seeder
{
    public function run(): void
    {
        DB::table('users')->insert([
            'name' => 'Admin',
            'email' => 'admin@example.com',
            'password' => Hash::make('password'),
        ]);
    }
}

3. Menjalankan Seeder
A. Menjalankan Seeder Langsung:
  php artisan db:seed --class=UserSeeder

B. Menambahkan ke DatabaseSeeder
Buka file database/seeders/DatabaseSeeder.php:
  public function run(): void
  {
      $this->call(UserSeeder::class);
  }

Jalankan:
  php artisan db:seed

4. Menggunakan Factory (Opsional, untuk Data Dummy Banyak)
Buat factory:
  php artisan make:factory UserFactory

Di file database/factories/UserFactory.php:
  public function definition(): array
  {
      return [
          'name' => fake()->name(),
          'email' => fake()->unique()->safeEmail(),
          'password' => bcrypt('password'),
      ];
  }

Gunakan factory di UserSeeder.php:
  use App\Models\User;

  User::factory()->count(10)->create();

Jalankan lagi:
  php artisan db:seed --class=UserSeeder

5. Mengecek Data di Database
Setelah seeder dijalankan, cek tabel users di database:
  SELECT * FROM users;

Ringkasan Cepat:
1. Buat seeder → php artisan make:seeder NamaSeeder
2. Tambah data di file seeder
3. Jalankan → php artisan db:seed --class=NamaSeeder atau panggil di DatabaseSeeder
4. (Opsional) Gunakan factory untuk data dummy banyak
5. Cek data di database
